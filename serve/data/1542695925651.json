{"id":"1542695925651","title":"微信小程序开发总结\n","summary":"微信小程序开发总结\n","tags":["微信小程序","总结","wepy","vue","iview weapp"],"content":"# 微信小程序开发总结\n\n> 微信小程序开发总结\n\n1. 微信公众号的账户和微信小程序的账户是分离的，并不是同一个，需要使用一个新的邮箱来注册小程序。\n\n2. 正式环境必须使用https协议，测试环境配置工具中可以设置为不校验http协议。\n\n![1547537741995.jpeg](http://localhost:9000/uploads/1547537741995.jpeg)\n\n3. 第三方框架 *wepy* 与 *mpvue* 的区别：\n\n[wepy](https://tencent.github.io/wepy/index.html)\n \n 腾讯官方开发的类vue框架，但是实际使用和vue还是有不小的区别的，总的来说比直接用原生开发体验上要好很多，如果是新项目建议用wepy开发，不能使用div、ul等html标签，而必须使用小程序的view、text等基础组件。\n\n [mpvue](http://mpvue.com/)\n\n 美团基于vue开发的框架，最大的优点就是符合vue的使用习惯，熟悉vue开发的同学，可以很快适应，比较适用于从原有vue项目迁移过来。\n\n4. *wepy* 与 *vue* 的异同\n\n #### 相同点： \n\n Props、 Mixin、 computed、 slot、组件化开发\n\n #### 不同点：\n\n methods里只能写template里绑定的事件、脏数据检查需要手动调用方法触发\n\n5. 微信小程序的第三方UI框架，目前各方面相对比较好用的是 [iview weapp](https://weapp.iviewui.com/)，不过还是存在比较多的坑，建议iview只是作为参考，另外自己实现组件体验和稳定性上来说会更好。\n\n6. 微信小程序的http封装\n\n 默认是get方法，post方法只接受表单传值。\n\n ```\n   // http.js\n   export const API_URI = 'https://test.faceke.com/api/v2'\n   import util from \"./util\"\n   let token = \"\"\n   function fetch(url, params, method, header, resolve, reject) {\n      let _header = {\n       ...header,\n       'client': 'miniapp',\n       'Authorization': \"Bearer \" + token\n    }\n    wx.request({\n       url: `${API_URI}/${url}`,\n       data: params,\n       method: method,\n       header: _header,\n       success: res => {\n       if (res.statusCode === 200 || res.statusCode === 201 || res.statusCode === 202 || res.statusCode \n       === 204) {\n        resolve(res)\n      } else if (res.statusCode === 401) {\n        console.log(\"token过期重新登录\")\n        wx.removeStorage({\n          key: 'token',\n          success(res) {\n            console.log(res.data)\n          }\n        })\n        setTimeout(() => {\n          wx.reLaunch({\n            url: 'index'\n          })\n        }, 600);\n      } else {\n        reject(res)\n      }\n    },\n    fail: err => {\n      console.log(err)\n    }\n  })\n  }\n\n   const http = function (url, params, method, header) {\n  if (!token) {\n    wx.getStorage({\n      key: 'token',\n      success(res) {\n        token = res.data\n        console.log(res.data)\n      }\n    })\n  }\n  return new Promise((resolve, reject) => {\n    if (!token) {\n      setTimeout(() => {\n        fetch(url, params, method, header, resolve, reject)\n      }, 300);\n    } else {\n      fetch(url, params, method, header, resolve, reject)\n    }\n  })\n  }\n\n  module.exports = {\n  baseUrl: function () {\n    return API_URI\n  },\n  get: function (url, params) {\n    return http(url, params, \"GET\", {\n      'content-type': 'application/json'\n    })\n  },\n  delete: function (url, params) {\n    return http(url, params, \"DELETE\", {\n      'content-type': 'application/json'\n    })\n  },\n  post: function (url, params) {\n    let formData = util.json2Form(params)\n    return http(url, formData, \"POST\", {\n      'content-type': 'application/x-www-form-urlencoded'\n    })\n  }\n  }\n\n ```\n\n 封装一个json格式数据转form格式数据的方法\n\n ```\n function json2Form(json) {\n  let str = [];\n  for (let p in json) {\n    str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(json[p]));\n  }\n  return str.join(\"&\");\n }\n\n module.exports = {\n  json2Form,\n }\n ```\n\n7. 小程序/公众号登录涉及到两个最关键的用户标识：\n\n *OpenId* 是一个用户对于一个小程序／公众号的标识，开发者可以通过这个标识识别出用户。\n\n *UnionId* 是一个用户对于同主体微信小程序／公众号／APP的标识，开发者需要在微信开放平台下绑定相同账号的主体。开发者可通过UnionId，实现多个小程序、公众号、甚至APP 之间的数据互通了。\n\n8. wx.getUserInfo用户信息在wx.login之后再获取\n\n ```\n   wx.login({\n    success(res) {\n      if (res.code) {\n        that.code = res.code\n        wx.getUserInfo({\n          success: function (res) {\n            console.log(\"获取微信用户信息\", res)\n            let data = res\n            http.post(\"miniLogin\", {\n              code: that.code,\n              encryptedData: data.encryptedData,\n              iv: data.iv\n            }).then(({\n              data\n            }) => {\n              console.log(\"登录\", data)\n            })\n          }\n        })\n      }\n    }\n  })\n ```\n\n9. 小程序模板消息推送获取formId\n\n [突破微信小程序模板消息限制，实现无限制主动推送](https://www.jianshu.com/p/3b02d75ef0dc)\n\n [模板消息](https://developers.weixin.qq.com/miniprogram/dev/framework/open-ability/template-message.html)\n\n 这里的button必须用原生的button, 如果用iview的i-buttton会获取不到formId。\n\n ```\n   <template>\n     <form @submit=\"getFormId\" report-submit=\"true\">\n       <button form-type=\"submit\" @submit=\"getFormId\">开关</button>\n     </from>\n   </template>\n   <script>\n    import wepy from 'wepy'\n    export default class XXX extends wepy.component {\n       methods = {\n         getFormId(e) {\n            let formId = e.detail.formId\n            // to do sth\n         }\n       }\n    }\n   </script>\n ```\n\n10. template中{{}}直接写js不起效\n\n  有时候我们在vue中习惯写`{{ item.label.substr(0,2) }}`来处理字符串，但是在wepy中这种写法有时候会不起效，为了使程序更稳定，我们可以在*onLoad*中直接处理好。\n\n11. wx.navigateTo 和 wx.reLaunch\n\n wx.navigateTo 会保留当前页面然后跳转，当用户按返回按钮后不会触发onLoad等事件，导致无法更数据。\n\n wx.reLaunch 会关闭所有页面再跳转。\n\n 使用时需要根据实际业务选择合适的api。\n\n12. 微信开发者工具的bug\n\n  当发现输入框不能输入或者工具的按钮点不动时，关掉微信开发者工具，然后重新打开即可。\n\n13. 发布审核流程\n\n  提交体验版，内部测试审核通过后 -> 提交审核（1~3天，本次项目审核时间2个小时）-> 提交发布\n\n  注意，提交审核后，还需要手动去提交发布，否则是不算上线的。提交发布成功后，大概需要5分钟左右的时间，就可以在微信里搜索到小程序了。\n\n14. 右上角的转发/分享按钮\n\n 默认右上角是没有转发按钮的，需要自己手动在需要转发分享的页面onLoad里添加以下代码。\n\n ```\n wx.showShareMenu({\n     withShareTicket: false\n })\n ```","lasttime":1547538209779}