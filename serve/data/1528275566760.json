{"id":"1528275566760","title":"【Webpack + Vue全家桶开发】（二） 常用配置","tags":["Vue","Webpack","vue-router","vuex","sass"],"content":"## 安装常用npm包\n\nnpm https://docs.npmjs.com/ 是前端流行的包管理工具，一般来说安装完node, npm也会自动安装好。\n\nnpm 可以使用以下命令升级\n\n```node\n// mac && linux\nsudo npm install npm -g\n\n// windows\nnpm install npm -g\n```\n\n## NPM 的常用命令\n\n```node\n// 本地安装\nnpm install webpack\n\n// 全局安装\nnpm install webpack -g\n\n// 卸载包\nnpm uninstall webpack\n\n// 更新包\nnpm update webpack\n\n// 安装并保存依赖（编译时会打包进去）\nnpm install webpack -S\n\n// 安装并保存到 （编译时不打包）\nnpm install webpack --save-dev\n```\n\n## Vue-Router的配置\n\n![](http://oh8nyy0e4.bkt.clouddn.com/18-6-8/38612900.jpg)\n\n@/router/index.js\n\n```javascript\nimport Vue from 'vue'\nimport Router from 'vue-router'\nimport url from './url'\nimport store from '../store'\nVue.use(Router)\n\nconst router = new Router({\n  mode: 'history',\n  routes: url,\n  scrollBehavior: () => ({\n    y: 0\n  })\n})\n\nrouter.beforeEach(({ meta, path }, from, next) => {\n  let { auth = true } = meta\n  let isUser = sessionStorage.getItem('userInfo')\n  let isLogin = Boolean(isUser) // true已登录， false未登录\n\n  if (auth && !isLogin && path !== '/sign-in') {\n    return next({ path: '/sign-in' })\n  }\n  if (!auth && isLogin && path === '/sign-in') {\n    return next({ path: '/home' })\n  }\n  next()\n})\n\nrouter.afterEach(function (transition) {\n  let data = transition.matched\n  store.dispatch('PAGE_STATUS', data[0].meta.pageStatus)\n})\n\nexport default router\n```\n\n@/router/url.js\n\n```javascript\nconst url = [\n  {\n    path: '/',\n    redirect: '/home'\n  }, {\n    path: '/home',\n    meta: {\n      auth: false,\n      pageStatus: {\n        pageName: 'Home',\n        showHeader: true,\n        showFooter: true\n      }\n    },\n    component: () => import('@/pages/home/index.vue')\n  }, {\n    path: '/create-account',\n    meta: {\n      auth: false,\n      pageStatus: {\n        pageName: 'Create Account',\n        showHeader: true,\n        showFooter: false\n      }\n    },\n    name: 'Create Account',\n    component: () => import('@/pages/create-account/index.vue')\n  }, {\n    path: '/sign-in',\n    meta: {\n      auth: false,\n      pageStatus: {\n        pageName: 'Sign In',\n        showHeader: true,\n        showFooter: false\n      }\n    },\n    name: 'Sign In',\n    component: () => import('@/pages/sign-in/index.vue')\n  }, {\n    path: '/*',\n    redirect: '/'\n  }\n]\n\nexport default url\n```\n\n## Vuex的配置\n\n![](http://oh8nyy0e4.bkt.clouddn.com/18-6-8/85156623.jpg)\n\n@/store/index.js\n\n```javascript\nimport Vue from 'vue'\nimport Vuex from 'vuex'\n\nimport state from './state'\nimport getters from './getters'\nimport mutations from './mutations'\nimport actions from './actions'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state,\n  getters,\n  mutations,\n  actions\n})\n```\n\n@/store/states.js\n\n```javascript\nconst state = {\n  token: sessionStorage.getItem('token') || '',\n  pageStatus: {},\n  userInfo: JSON.parse(sessionStorage.getItem('userInfo')) || {}\n}\n\nexport default state\n```\n\n@/store/getters.js\n\n```javascript\nconst getters = {\n  pageStatus: state => {\n    return state.pageStatus\n  },\n  userInfo: state => {\n    return state.userInfo\n  }\n}\n\nexport default getters\n```\n\n@/store/type.js\n\n```javascript\nexport const SAVE_TOKEN = 'SAVE_TOKEN' // 保存TOKEN\nexport const SAVE_USER = 'SAVE_USER' // 保存用户数据\nexport const CLEAR_USER = 'CLEAR_USER' // 清除用户数据\nexport const PAGE_STATUS = 'PAGE_STATUS' // 页面状态\n```\n\n@/store/mutations.js\n\n```javascript\nimport * as types from './types'\n\nconst mutations = {\n  [types.SAVE_TOKEN] (state, data) {\n    state.token = data\n    sessionStorage.setItem('token', data)\n  },\n  [types.SAVE_USER] (state, data) {\n    state.userInfo = data\n    let _data = JSON.stringify(data)\n    sessionStorage.setItem('userInfo', _data)\n  },\n  [types.CLEAR_USER] (state) {\n    state.token = ''\n    state.userInfo = ''\n    sessionStorage.removeItem('token')\n    sessionStorage.removeItem('userInfo')\n  },\n  [types.PAGE_STATUS] (state, data) {\n    state.pageStatus = data\n  }\n}\n\nexport default mutations\n```\n\n@/store/actions.js\n\n```javascript\nimport * as types from './types'\n\nconst actions = {\n  [types.SAVE_TOKEN] ({commit}, data) {\n    commit(types.SAVE_TOKEN, data)\n  },\n  [types.SAVE_USER] ({commit}, data) {\n    commit(types.SAVE_USER, data)\n  },\n  [types.CLEAR_USER] ({commit}) {\n    commit(types.CLEAR_USER)\n  },\n  [types.PAGE_STATUS] ({commit}, data) {\n    commit(types.PAGE_STATUS, data)\n  }\n}\n\nexport default actions\n```\n\n@/main.js\n\n```javascript\nimport Vue from 'vue'\nimport App from './App'\nimport router from './router'\nimport store from './store'\n\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  router,\n  store,\n  render: h => h(App)\n})\n```\n\n## 使用第三方UI组件库\n\n用Mint UI举例：\n\n安装包\n\n```node\n$ npm install mint-ui -S\n```\n\n引入组件\n\n```javascript\nimport Vue from 'vue'\nimport Mint from 'mint-ui'\nVue.use(Mint)\n```\n\n## 全局使用scss变量和函数\n\n![](http://oh8nyy0e4.bkt.clouddn.com/18-6-8/84388890.jpg)\n\n首先在你的scss文件夹里新建两个文件，var.scss用来写变量，mixins.scss用来写函数\n\n@/assets/scss/mix/var.scss\n\n```scss\n// 颜色变量\n$primary: #D01919;\n$r: 51;\n$g: 72;\n$b: 92;\n$a: 0.08;\n$shadow: rgba(0, 0, 0, $a);\n$alpha: rgba(0, 0, 0, 0);\n```\n\n@/assets/scss/mix/mixins.scss\n\n```scss\n@mixin middle-all {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n```\n\n修改build里的utils.js文件\n\n以下代码加在generateLoaders方法上面\n\n```javascript\n  // =========\n  // SASS 配置\n  // =========\n  function resolveResouce(name) {\n    return path.resolve(__dirname, '../src/assets/scss/mix/' + name);\n  }\n  function generateSassResourceLoader() {\n    const loaders = [\n      cssLoader,\n      'sass-loader',\n      {\n        loader: 'sass-resources-loader',\n        options: {\n          // it need a absolute path\n          resources: [resolveResouce('var.scss'), resolveResouce('mixins.scss')]\n        }\n      }\n    ];\n    if (options.extract) {\n      return ExtractTextPlugin.extract({\n        use: loaders,\n        fallback: 'vue-style-loader'\n      })\n    } else {\n      return ['vue-style-loader'].concat(loaders)\n    }\n  }\n  // ========\n```\n\n然后修改return中的sass和scss的调用函数\n\n![](http://oh8nyy0e4.bkt.clouddn.com/18-6-8/92305157.jpg)\n\n\n","lasttime":1546852885929}