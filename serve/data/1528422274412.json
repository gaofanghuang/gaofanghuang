{"id":"1528422274412","title":"【Webpack + Vue全家桶开发】（四） 进阶提升","tags":["Vue","Webpack","Webpack + Vue全家桶开发","自定义组件","自定义方法"],"content":"## 全局调用自定义方法\n\n![](http://oh8nyy0e4.bkt.clouddn.com/18-6-8/3366957.jpg)\n\n@/util/index.js\n\n```javascript\nimport _str2html from './modules/str2html'\n\nexport default {\n  str2html (str) {\n    return _str2html(str)\n  }\n}\n```\n\n@/util/modules/str2html.js\n\n```javascript\nconst str2html = function (str) {\n  str = str.replace(/&amp;/g, '&')\n  str = str.replace(/&lt;/g, '<')\n  str = str.replace(/&gt;/g, '>')\n  str = str.replace(/&quot;/g, \"''\")\n  str = str.replace(/&#039;/g, \"'\")\n  return str\n}\n\nexport default str2html\n```\n\n@/main.js\n\n```javascript\nimport util from './util'\nVue.prototype.$util = util\n```\n\n在业务代码中使用\n\n```javascript\nexport default {\n  data () {\n    return {\n      id: this.$route.query.id,\n      describe: ''\n    }\n  },\n  methods: {\n    getDescribe () {\n      let params = {\n        id: this.id\n      }\n      this.$fetch('GET_PRO_DESCRIBE', params).then(res => {\n        if (res.status === '1') {\n          // console.log(res)\n          // 字符串转换成html标签\n          this.describe = this.$util.str2html(res.data.description)\n        }\n      })\n        .catch(error => {\n          console.log(error)\n        })\n    }\n  }\n}\n```\n\n## 全局调用自定义组件\n\n![](http://oh8nyy0e4.bkt.clouddn.com/18-6-8/86406728.jpg)\n\n@/components/index.js\n\n```javascript\nimport ARow from './grid-row' // 栅格-行\nimport ACol from './grid-col' // 栅格-列\nimport ATabPane from './tab-pane' // 选项卡\nimport ABottomPane from './bottom-pane' // 底部弹框\nimport ARadio from './radio' // 单选框\nimport ACheckbox from './checkbox' // 复选框\nimport AInPage from './in-page' // 页中页\nimport AInput from './input' // 输入框\nimport AImg from './img' // 图片\nimport ALoadMore from './load-more' // 下拉刷新，下拉加载更多\nimport ABigImg from './big-img' // 大图\n\nconst components = {\n  install: function (Vue) {\n    Vue.component(ARow.name, ARow)\n    Vue.component(ACol.name, ACol)\n    Vue.component(ATabPane.name, ATabPane)\n    Vue.component(ABottomPane.name, ABottomPane)\n    Vue.component(ARadio.name, ARadio)\n    Vue.component(ACheckbox.name, ACheckbox)\n    Vue.component(AInPage.name, AInPage)\n    Vue.component(AInput.name, AInput)\n    Vue.component(AImg.name, AImg)\n    Vue.component(ALoadMore.name, ALoadMore)\n    Vue.component(ABigImg.name, ABigImg)\n  }\n}\n\nexport default components\n```\n\n@/components/radio/template.html\n\n```javascript\n<label class=\"radio-wrap\">\n  <input class=\"radio-input\" @change=\"checkRadio()\" type=\"radio\" :name=\"name\" :value=\"value\" :checked=\"value === status\">\n  <span class=\"radio-label\">\n    <slot></slot>\n  </span>\n</label>\n```\n\n@/components/radio/script.js\n\n```javascript\nexport default {\n  name: 'ARadio',\n  props: ['status', 'value', 'name'],\n  model: {\n    prop: 'status',\n    event: 'toStatus'\n  },\n  methods: {\n    checkRadio () {\n      this.$emit('toStatus', this.value)\n    }\n  }\n}\n```\n@/components/radio/style.scss\n\n```javascript\n.radio-wrap {\n  height: px2rem(30);\n  padding-left: px2rem(40);\n  display: flex;\n  align-items: center;\n  position: relative;\n  input[type=\"radio\"] {\n    width: auto;\n    border: 0;\n    outline: none;\n    -webkit-appearance: none;\n    appearance: none;\n    cursor: pointer;\n  }\n  input[type=\"radio\"]+span {\n    display: inline-block;\n    height: px2rem(30);\n    line-height: px2rem(30);\n    margin-left: px2rem(10);\n    font-size: px2rem(30);\n    cursor: pointer;\n  }\n  input[type=\"radio\"]:focus {\n    outline: none;\n  }\n  input[type=\"radio\"]:checked:after {\n    color: #333;\n  }\n  input[type=\"radio\"]:before {\n    display: inline-block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: px2rem(30);\n    height: px2rem(30);\n    content: '';\n    border-radius: 50%;\n    border: 1px solid $border;\n  }\n  input[type=\"radio\"]:checked:after {\n    content: '';\n    display: inline-block;\n    position: absolute;\n    top: px2rem(6);\n    left: px2rem(6);\n    width: px2rem(18);\n    height: px2rem(18);\n    content: '';\n    border-radius: 50%;\n    background: $primary;\n    animation: zoom-in 0.16s ease-in;\n  }\n}\n```\n\n@/main.js\n\n```javascript\nimport components from './components'\nVue.use(components)\n```\n\n在业务代码使用\n\n```html\n<ul class=\"logistics-number-list\" v-for=\"item in numbers\" :key=\"item\">\n  <li class=\"logistics-number-item\">\n    <a-radio v-model=\"number\" name=\"logisticsNumber\" :value=\"item\">{{ item }}</a-radio>\n  </li>\n</ul>\n```\n\n效果图\n\n![](http://oh8nyy0e4.bkt.clouddn.com/18-6-8/94708842.jpg)\n\n## 全局调用自定义指令\n\n![](http://oh8nyy0e4.bkt.clouddn.com/18-6-8/17736762.jpg)\n\n@/directive/index.js\n\n```javascript\nimport Swipe from './swipe'\n\nconst directive = {\n  install: function (Vue) {\n    Vue.directive('swipe', Swipe)\n  }\n}\n\nexport default directive\n```\n\n@/directive/swipe.js\n\n```javascript\nlet x1\nlet y1\nlet x2\nlet y2\n\nfunction move (e, el) {\n  x2 = e.changedTouches[0].pageX\n  y2 = e.changedTouches[0].pageY\n  let devW = e.target.offsetWidth\n  let devH = e.target.offsetHeight\n  let direction\n  if (devW < 30 || devH < 30) {\n    return\n  }\n  if (Math.abs(y2 - y1) > 30 && Math.abs(x2 - x1) < Math.abs(y2 - y1)) {\n    if (y2 > y1) {\n      direction = 'down'\n    } else {\n      direction = 'up'\n    }\n  } else if (Math.abs(x2 - x1) > 30 && Math.abs(x2 - x1) > Math.abs(y2 - y1)) {\n    if (x2 > x1) {\n      direction = 'right'\n    } else {\n      direction = 'left'\n    }\n  }\n  let data = {\n    direction: direction,\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    devW: devW,\n    devH: devH\n  }\n  if (Math.abs(y2 - y1) > 30 || Math.abs(x2 - x1) > 30) {\n    el.handler(data)\n  }\n}\n\nlet canRun = true\nconst swiperDo = {\n  acceptStatement: true,\n  bind: function (el, binding) {\n    el.handler = function (e) {\n      let value = binding.value\n      e.index = value.index\n      value.methods.call(this, e)\n    }\n\n    el.addEventListener('touchstart', function (e) {\n      x1 = e.touches[0].pageX\n      y1 = e.touches[0].pageY\n    }, false)\n\n    el.addEventListener('touchend', function (e) {\n      if (!canRun) {\n        return\n      }\n      move(e, el)\n      canRun = false\n      setTimeout(function () {\n        // 函数节流\n        canRun = true\n      }, 1000)\n    }, false)\n  }\n}\n\nexport default swiperDo\n```\n\n@/main.js\n\n```javascript\nimport directive from './directive'\nVue.use(directive)\n```\n\n在业余代码中这样使用\n\ntemplate\n\n```vue\n<ul class=\"tab-cons\" v-bind:style=\"wrapStyle\" v-if=\"list.length > 0\">\n <li class=\"tab-con\" v-for=\"(item, index) in list\" v-bind:key=\"index\" v-swipe=\"{methods: swipeTab, index: index}\">\n   <slot v-bind:item=\"item\"></slot>\n  </li>\n</ul>\n```\nscript\n```\nexport default {\n  methods: {\n   swipeTab (data) {\n      // 滑动切换tab\n      let i\n      if (data.direction === 'right') {\n        i = data.index - 1\n      } else if (data.direction === 'left') {\n        i = Number(data.index) + Number(1)\n      }\n      if (i > this.list.length - 1) {\n        i = 0\n      }\n      if (i < 0) {\n        i = this.list.length - 1\n      }\n      if (data.direction === 'right' || data.direction === 'left') {\n        this.swipeSlide(i)\n        this.swipeBtn(i)\n      }\n    }\n  }\n}\n```\n\n\n\n\n\n\n\n\n\n\n\n","lasttime":1546852900888}