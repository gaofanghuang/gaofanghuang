{"id":"1548752485885","title":"canvas学习笔记\n","summary":"使用cavas可以绘制各种图表、生成二维码、制作H5小游戏。\n","cover":"http://localhost:9000/uploads/1548753755342.png","tags":["canvas","vue","生命周期"],"content":"# canvas学习笔记\n\n> 使用cavas可以绘制各种图表、生成二维码、制作H5小游戏。\n\n## canvas在vue中的应用\n\n### 生命周期\n\ncanvas应该在mounted的生命周期中初始化，在updated中是无效的。\n\n```javascript\nexport default {\n  mounted() {\n    this.initCanvas()\n  },\n  methods: {\n    initCanvas() {\n      console.log(\"初始化canvas\")\n      let canvas = document.getElementById('canvas');\n      let ctx = canvas.getContext('2d');\n    }\n  }\n}\n```\n\n### 响应式画布\n\n当需要使canvas铺满全屏时，直接使用css声明的效果不是我们需要的效果。\n\n```css\n// 错误的效果，将造成图像变形拉伸\n.canvas {\n  width: 100vw;\n  height: 100vh;\n}\n```\n![1548753755342.png](http://localhost:9000/uploads/1548753755342.png)\n\n正确的做法，我们应该给canvas的宽高赋值：\n\n```javascript\nlet canvas = document.getElementById('canvas');\nlet ctx = canvas.getContext('2d');\nlet winW = window.innerWidth\nlet winH = window.innerHeight\ncanvas.width = winW\ncanvas.height = winH\n```\n![1548753786589.png](http://localhost:9000/uploads/1548753786589.png)\n\n响应式画布：\n\n```javascript\nlet canvas;\nlet ctx;\nexport default {\n  mounted() {\n    this.initCanvas()\n    // 当调整窗口大小时重绘canvas\n    window.onresize = () => {\n      this.initCanvas()\n    }\n  },\n  methods: {\n    initCanvas() {\n      console.log(\"初始化canvas\")\n      canvas = document.getElementById('canvas');\n      ctx = canvas.getContext('2d');\n      canvas.width = window.innerWidth\n      canvas.height = window.innerHeight\n      this.drawSmile()\n    },\n    drawSmile() {\n      ctx.beginPath();\n      ctx.arc(75, 75, 50, 0, Math.PI * 2, true); // 绘制\n      ctx.moveTo(110, 75);\n      ctx.arc(75, 75, 35, 0, Math.PI, false); // 口(顺时针)\n      ctx.moveTo(65, 65);\n      ctx.arc(60, 65, 5, 0, Math.PI * 2, true); // 左眼\n      ctx.moveTo(95, 65);\n      ctx.arc(90, 65, 5, 0, Math.PI * 2, true); // 右眼\n      ctx.stroke();\n    }\n  }\n}\n```","lasttime":1548755771236}