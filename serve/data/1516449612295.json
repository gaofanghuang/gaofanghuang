{"id":"1516449612295","title":"前端开发规范：1-通用规范","tags":["开发手册","基础知识","扫盲","前端开发规范"],"content":"## 关于规范和风格\n\n风格规范没有绝对的对错，应该根据每个开发团队的业务和习惯来制定。\n\n随着技术、硬件设备及浏览器平台等环境的更新换代，几年前的一些规范可能就会变成了不适用的/错误的，切忌生搬硬套。\n\n开发时应更多的考虑代码的可读性，开发的便捷性， 团队成员的习惯等因素，而不是过于考虑性能问题。\n\n\n## 关于命名\n\n1. 以英文字母开头，*不能*使用数字开头，*不使用*无意义的字母拼接，*不使用*拼音命名\n2. 文件/url资源的字母使用*全*小写，单词使用横杠`-`来分隔\n3. 压缩过的文件以`.min.css`、`.min.js`、`[hash].css`等后缀命名\n4. 只使用class添加样式，而不是id, id预留给js操作\n5. js常量使用全大写以下划线间隔：`const = MAIN_COLOR`，js变量或方法以驼峰大小写方式命名: `function getList () {}`, `let curPage = 'home'`\n6. js的命名避免与关键字/保留字/原生方法冲突。\n7. 命名词意的拼接顺序，尽量不超过3个词拼接，否则名字太长使用起来过于累赘。\n8. class使用全小写，单词拼接以横杠或下划线间隔\n9. class命名词意组成：模块+描述+操作\n10. js命名词意组成：操作+模块\n\n*不*推荐的文件命名格式\n\n```html\ncomScipt.js\ncomStyle.css\ntop_head.css\n233-home.js\nstyle-min.css\n```\n\n*推荐*的文件命名格式\n\n```html\ncom-scipt.js\ncom-style.css\ntop-head.css\nhome-233.js\nstyle.min.css\n```\n\n*推荐*的css/function/变量的命名格式\n```html\n  <ul class=\"eidt-list\">\n   <li class=\"edit-item\" @click=\"openItem(item.id)\" v-for=\"item in list\" v-bind:key=\"item.id\" v-bind:class=\"{'cur': item.id === curItem.id}\" v-if=\"!searchKey\">\n     <p class=\"edit-item-title\">{{ item.title }}</p>\n     <tags :value=\"item.tags\" v-if=\"!isLoading\"></tags>\n   </li>\n  </ul>\n```\n\n\n\n## 引入资源的协议\n\n不要指定引入资源所带的具体协议\n\n当引入图片、样式、脚本等静态文件时，不要带`http://`或`https://`协议，除非这两个协议都不可用\n\n*不*推荐\n\n```html\n<script scr=\"https://cdn.xxx.com/abc.js\">\n```\n\n```css\n.example {\n  background: url(http://static.xxx.com/img/head-bg.jpg);\n}\n```\n\n*推荐*\n\n```html\n<script scr=\"//cdn.bootcss.com/vue/2.5.13/vue.js\">\n```\n```css\n.example {\n  background: url(//static.xxx.com/img/head-bg.jpg);\n}\n```\n\n## 文本缩进\n\n不同编辑器对tab实现不同，有些是4空格有些8空格。\n\n个人认为4个空格太长了，使用2个空格代码更整齐紧凑一些，阅读体验更好。\n\n缩进使用两个空格或把编辑器tab键设置自动替换为2个空格。\n\nvscode编辑器配置： 文件 > 首选项 > 设置\n\n```JSON\n \"editor.tabSize\": 2\n```\n\n## 注释写什么\n\n1. 多写注释，但是不要滥写注释。 \n\n2. 规范的结构命名和条理清晰，比注释更重要。\n\n3. 如果使用WebPack开发，可以安装一些自动去注释的插件，在编译时会自动去掉注释，无需担心代码冗余问题。\n\n4. 如果业务逻辑复杂，注释应写为什么这样做，以及与之相关的逻辑思考，而不是只写这样做的结果得到什么，可以附带网上的参考链接，如https://stackoverflow.com/\n等技术文章作为备注\n\n5. 注释应该写在对应内容的上面一行。\n\n## JS代码检查\n\n编辑器安装如`ESLint`等JS代码检查工具，帮助及时发现错误，改正不规范写法\n\n## 关注点分离\n\n关注点主要指的是：信息（HTML 结构）、外观（CSS）和行为（JavaScript）。为了使它们成为可维护的干净整洁的代码，减少团队开发中的冲突，我们要尽可能的将它们分离开来。\n\n严格地保证结构、表现、行为三者分离，并尽量使三者之间没有太多的交互和联系。\n\n就是说，尽量在文档和模板中只包含结构性的 HTML；所有表现代码，移入样式表中；所有动作行为，移入脚本之中。\n\n\n## 精简的HTML标签\n\n1. HTML标签专注于内容的展现，在视觉方面尽量使用css伪元素来代替一个空的标签占位。\n\n2. UI的边框圆角等简单效果，多使用纯css实现。如果确实需要图片效果，则使用css的*background*属性引入而不占用一个img标签，`<img>`等多媒体标签只在展现内容的时候使用。\n\n\n## 单引号与双引号\n\n在HTML/CSS中尽量使用双引号而不是单引号。\n\n在JS中双引号应该在单引号的外层，如果需要在JS加入html字符，则使用*`*符号包裹。\n\n```html\nlet aNode = `<div class=\"modal-wrap\">模态框</div>`\n```\n\n> 拓展阅读：\n\n[JS关键字和保留字汇总](http://www.itxueyuan.org/view/6627.html)\n","lasttime":1546852198243}