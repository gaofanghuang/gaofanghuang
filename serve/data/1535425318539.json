{"id":"1535425318539","title":"上传视频并截图，跨域报错的解决办法\n","summary":"Failed to execute 'toDataURL' on 'HTMLCanvasElement': Tainted canvases may not be exported.\n","tags":["视频","截图","跨域"],"content":"# 上传视频并截图，跨域报错的解决办法\n\n## 跨域报错的原因\n\n最开始上传视频成功后，video标签的src会直接引入上传后的服务端资源地址，然后使用canvas截图就发生了跨域报错的提示。\n\n> Failed to execute 'toDataURL' on 'HTMLCanvasElement': Tainted canvases may not be exported.\n\n![](http://oh8nyy0e4.bkt.clouddn.com/18-8-28/86491418.jpg)\n\n按网上说的方法设置video标签的属性 `crossorigin=\"anonymous\"`,还是报错，原因是服务端的请求头没设置，不允许跨域访问。\n\n> Failed to load http://xxxx.oss-cn-shenzhen.aliyuncs.com/2018/08/22/1749/VU0SL0msslJvN1q3YNN2fmr1E4zmmE0vmHTV7A9s.mp4: No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'http://localhost:8080' is therefore not allowed access.\n\n解决办法： 视频上传成功后，不要引入线上地址，仍然使用本地视频地址，即可解决跨域问。\n\n![](http://oh8nyy0e4.bkt.clouddn.com/18-8-28/20259578.jpg)\n\n\n## 完整代码\n\n```javascript\n<template>\n  <div>\n    <video ref='videoView' crossorigin=\"anonymous\" v-show=\"videoId\" :src=\"videoPath\" controls=\"controls\" class=\"video-upload-post-preview m-box-center m-box-center-a image-wrap more-image img3\"></video>\n    <input ref='videofile' id=\"selectvideo\" type=\"file\" name=\"file\" @change=\"uploadVideo\" class=\"upload__input m-rfile\">\n  </div>\n</template>\n\n<script>\n  import sendImage from \"@/util/SendImage.js\";\n  export default {\n    data() {\n      return {\n        videoId: \"\",\n        videoPath: \"\",\n        videoCover: \"\"\n      }\n    },\n    methods: {\n      uploadVideo(e) {\n        let file = e.target.files[0];\n        sendImage(file)\n          .then(id => {\n            // console.log(id)\n            this.videoId = id\n            this.videoPath = URL.createObjectURL(file)\n            setTimeout(() => {\n              this.captureImage(file);\n            }, 300);\n          })\n          .catch(e => {\n            this.$Message.error(\"上传失败，请稍后再试\");\n          });\n      },\n      captureImage(file) {\n        let video = this.$refs.videoView;\n        // console.log(this.$refs, video)\n        var canvas = document.createElement(\"canvas\"); //创建一个canvas \n        canvas.width = video.videoWidth * 0.8; //设置canvas的宽度为视频的宽度 \n        canvas.height = video.videoHeight * 0.8; //设置canvas的高度为视频的高度 \n        canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height); //绘制图像 \n        let imgBase64 = canvas.toDataURL()\n        let imgFile = this.dataToFile(imgBase64)\n        // console.log('img', imgFile)\n        sendImage(imgFile)\n          .then(id => {\n            this.videoCover = id\n          })\n          .catch(e => {\n            this.$Message.error(\"上传失败，请稍后再试\");\n          });\n      },\n      dataToFile(urlData) {\n        var bytes = window.atob(urlData.split(',')[1]); //去掉url的头，并转换为byte  \n        //处理异常,将ascii码小于0的转换为大于0  \n        var ab = new ArrayBuffer(bytes.length);\n        var ia = new Uint8Array(ab);\n        for (var i = 0; i < bytes.length; i++) {\n          ia[i] = bytes.charCodeAt(i);\n        }\n        return new Blob([ab], {\n          type: 'image/jpg'\n        });\n      }\n    }\n  }\n</script>\n```","lasttime":1547538488815}