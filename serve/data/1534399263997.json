{"id":"1534399263997","title":"一些webpack常见编译报错的解决方案\n","summary":"","tags":["webpack","报错","npm"],"content":"# 一些webpack常见编译报错的解决方案\n\n#### 重新安装依赖可以解决80%的webpack编译报错问题。\n\n```node\nrm -rf node_modules\nrm package-lock.json\nnpm cache clear --force\nnpm install\n```\n\n#### 引起报错的一些常见原因\n\n1. *移动了项目的路径*，比如说从D盘移动到了E盘。原因：使用npm安装依赖时，会记录node_nodules里文件的当前路径，这个路径是写死的绝对路径，不会跟随项目移动而移动，因此一旦移动项目的位置，路径错误就必须要重新安装依赖了。\n\n2. *使用的依赖存在漏洞*，`npm audit`，自动检测修复漏洞，需npm6以上才能使用\n\n3. node、npm版本过低，需要升级版本\n\n```node\nnode -v    // 查看当前版本号\nnpm cache clean -f\nnpm install n -g\nn stable\nnode -v    // 查看版本号是否变化\n```","lasttime":1547539326789}